#!/usr/bin/env bash
#
# set -x
#
###################
macos=false
###################
if [[ ! -d "${0%/*}/../lib" ]]; then
	printf '%s: %s\n' 'ERROR! Unable to find quote library at:' "${0%/*}/lib/" >&2
	exit 1
else
	libdir="${0%/*}/../lib"
fi
###################
print_quote () {
	local q=$@
	printf '"%s"\n\t- %s\n' "$(awk -F\| '{print $2}' <<<"$q")" "$(awk -F\| '{print $1}' <<<"$q")"
}
get_quote2 () {
	local a=$1
	local f
	local p
	local q
	if [[ -n "$a" ]]; then
		p="*${a}*"
		f=$(find "$libdir" -type f -iname "$p" | head -1)
	else
		f=$(find "$libdir" -type f -print | sort -R | tail -1)
	fi
	a=${f##*/}
	a=${a/_/ }
	q=$(cat "$f" | sort -R | tail -1)
	printf '%s|%s\n' "$a" "$q"
}
mac_notify () {
    local okay=Okay
    local cancel="You're damn right it's okay"
    local message=$@
    osascript <<EOF &>/dev/null
			tell application "Finder"
				activate
        set theDialogText to "${message:-"Alert!"}"
        display dialog theDialogText buttons {"${cancel:-"Also Okay"}", "${okay:-Okay}"} default button "${okay:-Okay}" cancel button "${cancel:-"Also Okay"}"
			end tell
EOF
}
###################
while getopts Ma: opt; do
	case $opt in
		M)	macos=true;;
		a)	author=$OPTARG;;
	esac
done
###################	
q=$(get_quote2 "$author")
if [[ $macos == true ]]; then
	mac_notify $(print_quote "$q" | sed 's/"/\\"/g')
else
	print_quote "$q"
fi